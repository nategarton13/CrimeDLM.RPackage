% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_states.R
\name{get_states}
\alias{get_states}
\title{Function to sample the latent states given sampled covariance matrices.}
\usage{
get_states(
  mcmc_samples,
  data,
  harmonics = 4,
  crime_types = c("burglary", "robbery"),
  initial_year = 2012,
  final_year = 2016
)
}
\arguments{
\item{mcmc_samples}{A list of parameter samples with the same names and classes as those produced by \code{run_mcmc}.}

\item{data}{The full Chicago crime dataset as given by \code{chicago}.}

\item{harmonics}{An integer in 1 to 6 specifiying the number of harmonics to model seasonality.
Must be consistent with specification in \code{run_mcmc()}.}

\item{crime_types}{Character vector specifying the types of crimes to include in the analysis.
The function requires at least two crime types.}

\item{initial_year}{Integer in 2007 to 2015 specifying the first year in the analysis.}

\item{final_year}{Integer in 2008 to 2016 specifying the last year in the analysis.}
}
\value{
Returns a list with two objects: state_samples and crime_types.
state_samples is a three dimensional array where dimension one corresponds to the sample/iteration,
dimension two corresponds to the number of time points, and dimension three corresponds to the parameter.
Parameters are in the following order: \eqn{\mu_1,\mu_2,...,\beta_1, \beta_2,...}. The ordering of a given set of parameters,
say \eqn{\mu}, is the ordering of the types of crimes specified by the \code{crime_types} argument.
After \eqn{\beta} parameters, the remainder are needed for the construction of seasonal effects.
crime_types returns the crime_types argument specified in the function. This serves as a reminder of
the ordering of crime types, which is important for interpreting the state_samples output
as well as making sure that the order of crime types is consistent between other functions.
}
\description{
\code{get_states} uses the \code{dlm} package to sample the latent states via the
forward filtering-backward sampling algorithm as described in the research narrative.
The same arguments should be supplied for parameters shared by \code{get_states} and \code{run_mcmc}.
}
\examples{
 \dontrun{
 cov_samples <- run_mcmc(data = chicago, chains = 2, adapt_delta = 0.8)
 state_samples <- get_states(mcmc_samples = cov_samples$samples, data = chicago)
 }
}
